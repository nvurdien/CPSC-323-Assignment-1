Token		=	Lexeme
KEYWORD 	=	 function
IDENTIFIER 	=	 convert$
SEPARATOR 	=	 [
IDENTIFIER 	=	 fahr
SEPARATOR 	=	 :
KEYWORD 	=	 int
SEPARATOR 	=	 ]
SEPARATOR 	=	 {
KEYWORD 	=	 return
INTEGER 	=	 5
OPERATOR 	=	 *
SEPARATOR 	=	 (
IDENTIFIER 	=	 fahr
OPERATOR 	=	 -
INTEGER 	=	 32
SEPARATOR 	=	 )
OPERATOR 	=	 /
INTEGER 	=	 9
SEPARATOR 	=	 ;
SEPARATOR 	=	 }
SEPARATOR 	=	 %%
KEYWORD 	=	 int
IDENTIFIER 	=	 low
SEPARATOR 	=	 ,
IDENTIFIER 	=	 high
SEPARATOR 	=	 ,
IDENTIFIER 	=	 step$
SEPARATOR 	=	 ;
KEYWORD 	=	 get
SEPARATOR 	=	 (
IDENTIFIER 	=	 low
SEPARATOR 	=	 ,
IDENTIFIER 	=	 high
SEPARATOR 	=	 ,
IDENTIFIER 	=	 step$
SEPARATOR 	=	 )
SEPARATOR 	=	 ;
KEYWORD 	=	 while
SEPARATOR 	=	 (
IDENTIFIER 	=	 low
OPERATOR 	=	 <
IDENTIFIER 	=	 high
SEPARATOR 	=	 )
SEPARATOR 	=	 {
KEYWORD 	=	 put
SEPARATOR 	=	 (
IDENTIFIER 	=	 low
SEPARATOR 	=	 )
SEPARATOR 	=	 ;
KEYWORD 	=	 put
SEPARATOR 	=	 (
IDENTIFIER 	=	 convert$
SEPARATOR 	=	 (
IDENTIFIER 	=	 low
SEPARATOR 	=	 )
SEPARATOR 	=	 )
SEPARATOR 	=	 ;
IDENTIFIER 	=	 low
OPERATOR 	=	 =
IDENTIFIER 	=	 low
OPERATOR 	=	 +
IDENTIFIER 	=	 step$
SEPARATOR 	=	 ;
SEPARATOR 	=	 }
